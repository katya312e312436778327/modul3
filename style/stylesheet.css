@import url('https://fonts.googleapis.com/css2?family=IBM+Plex+Mono:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;1,100;1,200;1,300;1,400;1,500;1,600;1,700&display=swap');

* {
    -moz-user-select: none;
    -webkit-user-select: none;
    -ms-user-select:none;
    user-select:none;
    -o-user-select:none;
}

p {
  font-family: 'IBM Plex Mono', monospace;
}

svg {
    display: flex;
}

body {
	 height: auto;
	min-height: 0.5vh;
	max-width: 800vw;
    width: 800vw;
}

#map {
    transform: scale(1.0);
    position: relative;
}

* {
  box-sizing: border-box;
}

.row {
  display: flex;
}

/* Create three equal columns that sits next to each other */
.column {
  flex: 33.3333%;
}

.row::after {
  content: "";
  clear: both;
}

.segment {
    float: left;
    display: flex;
}

.button {
  cursor: pointer;
}

.vert-move {
    -webkit-animation: mover 1s infinite  alternate;
    animation: mover 1s infinite  alternate;
}

@-webkit-keyframes mover {
    0% { transform: translateY(0); }
    100% { transform: translateY(-10px); }
}
@keyframes mover {
    0% { transform: translateY(0); }
    100% { transform: translateY(-10px); }
}


.duck0-home {
  animation: duck_a 2s forwards;
}

@keyframes duck_a {
  50% { transform: translate(2.4vw, -2.9vh) }
  100% { transform: translate(-7vw, -3vh) }
}

.duck1-home {
  animation: duck_b 2s forwards;
}

@keyframes duck_b {
  50% { transform: translate(-1.43vw, 1.8vh); }
  100% { transform: translate(-6.5vw, -2.5vh); }
}

.duck2-home {
  animation: duck_c 2s forwards;
}

@keyframes duck_c {
  50% { transform: translate(0vw, 2.15vh) }
  100% { transform: translate(-11vw, -4.5vh) }
}

.anim {
  transition-duration: 5s;
}

.highlight-anim {
  animation: highlight 2s infinite alternate;
}

@keyframes highlight {
  0% {opacity: 0;}
  100% {opacity: 0.75;}
}

.clouds-move {
  animation: clouds 2s infinite alternate;
}

@keyframes clouds {
    0% { transform: translateX(0); }
    100% { transform: translateX(-10px); }
}